{
  "extends": "eslint:recommended",
  "parserOptions": {
    "ecmaVersion": 8,
    "sourceType": "module"
  },
  "env": {
    "node": true,
    "es6": true
  },
  "rules": {
    // Possible Errors
    "for-direction": "error",
    "no-extra-parens": [
      "error",
      "functions"
    ],
    "no-inner-declarations": [
      "error",
      "both"
    ],
    "no-prototype-builtins": [
      "error"
    ],
    "no-template-curly-in-string": [
      "error"
    ],
    "valid-jsdoc": [
      "error",
      {
        "prefer": {
          "returns": "return"
        },
        "requireReturn": false,
        "matchDescription": ".+"
      }
    ],
    // Best Practices
    "accessor-pairs": "error",
    "array-callback-return": "error",
    "block-scoped-var": "error",
    "class-methods-use-this": "error",
    "complexity": [
      "error",
      {
        "max": 15
      }
    ],
    "consistent-return": "error",
    "curly": "error",
    "default-case": "error",
    "dot-location": [
      "error",
      "property"
    ],
    "eqeqeq": [
      "error"
    ],
    "guard-for-in": "error",
    "no-alert": "error",
    "no-caller": "error",
    "no-div-regex": "error",
    "no-else-return": "error",
    "no-empty-function": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-fallthrough": [
      "error",
      {
        "commentPattern": "[Ff]alls?\\s*through is intentionally"
      }
    ],
    "no-floating-decimal": "error",
    "no-implicit-coercion": "error",
    "no-implied-eval": "error",
    "no-invalid-this": "error",
    "no-iterator": "error",
    "no-labels": [
      "error",
      {
        "allowLoop": true
      }
    ],
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-magic-numbers": [
      "error",
      {
        "ignore": [
          0,
          1
        ],
        "ignoreArrayIndexes": true,
        "enforceConst": true
      }
    ],
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    // no-param-reassign
    "no-proto": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    // "no-script-url"
    "no-self-assign": [
      "error",
      {
        "props": true
      }
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "no-void": "error",
    // no-warning-comments
    "no-with": "error",
    "prefer-promise-reject-errors": "error",
    "radix": [
      "error",
      "as-needed"
    ],
    "require-await": "error",
    "vars-on-top": "error",
    "wrap-iife": [
      "error",
      "outside",
      {
        "functionPrototypeMethods": true
      }
    ],
    "yoda": [
      "error",
      "never",
      {
        "onlyEquality": true
      }
    ],
    // Strict Mode
    "strict": [
      "error"
    ],
    // Variable
    "init-declarations": "error",
    "no-catch-shadow": "error",
    "no-label-var": "error",
    "no-shadow": [
      "error",
      {
        "builtinGlobals": true,
        "hoist": "all"
      }
    ],
    "no-shadow-restricted-names": "error",
    "no-undef-init": "error",
    "no-undefined": "error",
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "no-use-before-define": "error",
    // Node.js and CommonJS
    "callback-return": [
      "error",
      [
        "callback",
        "cb"
      ]
    ],
    "global-require": "error",
    "handle-callback-err": "error",
    "no-buffer-constructor": "error",
    "no-mixed-requires": "error",
    "no-new-require": "error",
    "no-path-concat": "error",
    "no-process-env": "off",
    // I need this
    "no-process-exit": "error",
    "no-sync": "error",
    // Stylistic Issues
    "array-bracket-newline": [
      "error",
      {
        "multiline": true
      }
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-element-newline": [
      "error",
      {
        "multiline": true
      }
    ],
    "block-spacing": [
      "error",
      "never"
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "camelcase": "error",
    "capitalized-comments": [
      "error",
      "always",
      {
        // WebStorm lint suppress
        "ignorePattern": "noinspection",
        "ignoreInlineComments": true,
        "ignoreConsecutiveComments": true
      }
    ],
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "computed-property-spacing": [
      "error",
      "never"
    ],
    "consistent-this": [
      "error",
      "this"
    ],
    "eol-last": [
      "error",
      "always"
    ],
    "func-call-spacing": [
      "error",
      "never"
    ],
    "func-name-matching": "error",
    "func-names": [
      "error",
      "as-needed"
    ],
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    // id-blacklist
    "id-length": [
      "error",
      {
        "min": 3,
        "max": 20,
        "exceptions": [
          "_",
          // File object
          "f",
          "i",
          "j",
          "k",
          "id"
        ]
      }
    ],
    // id-match
    "indent": [
      "error",
      4
    ],
    "key-spacing": "error",
    "keyword-spacing": "error",
    "line-comment-position": [
      "error",
      {
        "position": "above"
      }
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    // lines-around-comment
    "max-depth": [
      "error",
      {
        "max": 4
      }
    ],
    "max-len": [
      "error",
      {
        "code": 80
      }
    ],
    // max-lines
    "max-nested-callbacks": [
      "error",
      {
        "max": 3
      }
    ],
    "max-params": [
      "error",
      {
        "max": 4
      }
    ],
    "max-statements": [
      "error",
      {
        "max": 50
      }
    ],
    "max-statements-per-line": [
      "error",
      {
        "max": 1
      }
    ],
    // multiline-ternary
    "new-cap": "error",
    "new-parens": "error",
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 3
      }
    ],
    "no-array-constructor": [
      "error"
    ],
    "no-bitwise": "off",
    "no-continue": "off",
    "no-inline-comments": "off",
    "no-lonely-if": "error",
    "no-mixed-operators": "error",
    "no-multi-assign": "off",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2,
        "maxEOF": 1,
        "maxBOF": 0
      }
    ],
    "no-negated-condition": "error",
    "no-nested-ternary": "error",
    "no-new-object": "error",
    "no-plusplus": "off",
    "no-restricted-syntax": "off",
    "no-tabs": "error",
    "no-ternary": "off",
    "no-trailing-spaces": [
      "error"
    ],
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": [
      "error",
      "beside"
    ],
    "object-curly-newline": "off",
    "object-curly-spacing": "error",
    "object-property-newline": [
      "error",
      {
        "allowMultiplePropertiesPerLine": false
      }
    ],
    "one-var": [
      "error",
      "never"
    ],
    "one-var-declaration-per-line": [
      "error",
      "always"
    ],
    "operator-assignment": "error",
    "operator-linebreak": [
      "error",
      "before"
    ],
    "padded-blocks": [
      "error",
      "never"
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "any",
        "prev": "*",
        "next": "*"
      }
    ],
    "quote-props": [
      "error",
      "as-needed",
      {
        "keywords": true,
        "unnecessary": false,
        "numbers": true
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": false
      }
    ],
    "require-jsdoc": [
      "error",
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": true,
          "ClassDeclaration": true,
          "ArrowFunctionExpression": false
        }
      }
    ],
    "semi": [
      "error",
      "never"
    ],
    // semi-spacing
    // semi-style
    "sort-keys": "off",
    "sort-vars": "off",
    "space-before-blocks": [
      "error",
      "always"
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "space-infix-ops": "error",
    "space-unary-ops": [
      "error",
      {
        "words": true,
        "nonwords": false
      }
    ],
    "spaced-comment": [
      "error",
      "always"
    ],
    "switch-colon-spacing": "error",
    "template-tag-spacing": [
      "error",
      "never"
    ],
    "unicode-bom": [
      "error",
      "never"
    ],
    "wrap-regex": "error",
    // ECMAScript 6
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "arrow-spacing": "error",
    // constructor-super
    "generator-star-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    // no-class-assign
    "no-confusing-arrow": [
      "error",
      {
        "allowParens": true
      }
    ],
    // no-const-assign
    // no-dupe-class-members
    "no-duplicate-imports": "error",
    "no-new-symbol": "error",
    // no-restricted-imports
    // no-this-before-super
    "no-useless-computed-key": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "object-shorthand": [
      "error",
      "always"
    ],
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "prefer-numeric-literals": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    // require-yield
    "rest-spread-spacing": ["error", "never"],
    "sort-imports": "off",
    "symbol-description": "error",
    "template-curly-spacing": ["error", "never"],
    "yield-star-spacing": ["error", {
      "before": false,
      "after": true
    }]
  }
}
